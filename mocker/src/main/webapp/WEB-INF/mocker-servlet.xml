<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
	<!-- 激活spring的注解. -->
	<context:annotation-config />

	<!-- 扫描注解组件并且自动的注入spring beans中. 例如,他会扫描@Controller 和@Service下的文件.所以确保此base-package设置正确. -->
	<context:component-scan base-package="com.letv.mocker" />
	<mvc:annotation-driven />

	<context:property-placeholder location="classpath:jdbc.properties" />
	<import resource="jdbc-context.xml" />

	<!-- freemarker页面解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix">
			<value>.html</value>
		</property>
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView
			</value>
		</property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="requestContextAttribute" value="request" />
	</bean>

	<!-- 配置Freemarker -->
	<bean id="freemarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 一定要加上/WEB-INF/ -->
		<property name="templateLoaderPath">
			<value>/WEB-INF/view/</value>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">3600</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="number_format">#</prop>
			</props>
		</property>
	</bean>

	<!-- Spring会直接初始化ApplicationContextAware的子类,并执行setApplicationContext()方法:获取applicationContext -->
	<bean class="com.letv.mocker.framework.listener.SpringContextAware" />
</beans>